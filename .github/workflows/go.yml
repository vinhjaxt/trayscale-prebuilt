# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Build
      run: |
        docker run --rm -v "$(pwd):/app:rw" -u 0 -w /app ubuntu:lunar bash -c ' \
        apt update -y && \
        apt install -y --no-install-recommends curl apt-utils build-essential sudo zip git libgtk-4-dev ca-certificates && \
        curl -OL http://launchpadlibrarian.net/623621457/libadwaita-1-0_1.2.0-1ubuntu2_amd64.deb && \
        curl -OL http://launchpadlibrarian.net/623621451/gir1.2-adw-1_1.2.0-1ubuntu2_amd64.deb && \
        curl -OL http://launchpadlibrarian.net/623621454/libadwaita-1-dev_1.2.0-1ubuntu2_amd64.deb && \
        apt install ./*.deb && \
        curl -OL https://go.dev/dl/go1.21.6.linux-amd64.tar.gz && \
        tar xf go1.21.6.linux-amd64.tar.gz && \
        export PATH="${PATH}:$(pwd)/go/bin" && \
        go env && \
        git config --global --add safe.directory '\''*'\'' && \
        go get -u ./... && \
        go mod tidy && \
        export version="$(git describe --tags --always)" && \
        go build -v -trimpath -ldflags="-extldflags=-static -s -w -X 'deedles.dev/trayscale/internal/version.version=$version'" -o trayscale ./cmd/trayscale && \
        zip trayscale.zip -r dist.sh trayscale dev.deedles.Trayscale.png dev.deedles.Trayscale.desktop dev.deedles.Trayscale.metainfo.xml dev.deedles.Trayscale.gschema.xml
        '

    # Create release
    - name: Generate release tag
      id: tag
      run: |
        sudo timedatectl set-timezone Asia/Ho_Chi_Minh
        sudo date -s "$(wget -qSO- --max-redirect=0 google.com 2>&1 | grep Date: | cut -d' ' -f5-8)Z"
        echo "release_tag=ActionBuild_$(date +"%Y.%m.%d_%H-%M-%S")" >> $GITHUB_OUTPUT
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        files: |
          ./trayscale*
    # Done release

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write
